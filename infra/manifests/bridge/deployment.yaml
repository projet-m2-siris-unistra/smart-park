apiVersion: apps/v1
kind: Deployment
metadata:
  name: bridge
spec:
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-requests-cpu: "100m"
        vault.hashicorp.com/agent-inject-secret-nats-ca.pem: "pki/issue/nats-client-bridge"
        vault.hashicorp.com/agent-inject-template-nats-ca.pem: |
          {{ with secret "pki/issue/nats-client-bridge" "common_name=bridge" }}
          {{ .Data.issuing_ca }}{{ end }}
        vault.hashicorp.com/agent-inject-secret-nats-cert.pem: "pki/issue/nats-client-bridge"
        vault.hashicorp.com/agent-inject-template-nats-cert.pem: |
          {{ with secret "pki/issue/nats-client-bridge" "common_name=bridge" }}
          {{ .Data.certificate }}{{ end }}
        vault.hashicorp.com/agent-inject-secret-nats-key.pem: "pki/issue/nats-client-bridge"
        vault.hashicorp.com/agent-inject-template-nats-key.pem: |
          {{ with secret "pki/issue/nats-client-bridge" "common_name=bridge" }}
          {{ .Data.private_key }}{{ end }}
        vault.hashicorp.com/role: bridge
    spec:
      serviceAccountName: bridge
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchLabels: {}
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
      containers:
      - name: bridge
        image: m2smartpark/bridge:latest
        imagePullPolicy: Always
        securityContext:
          readOnlyRootFilesystem: true
        env:
        - name: NATS_URL
          value: "nats://nats.nats.svc:4222"
        - name: NATS_CERT
          value: "/vault/secrets/nats-cert.pem"
        - name: NATS_KEY
          value: "/vault/secrets/nats-key.pem"
        - name: NATS_CA
          value: "/vault/secrets/nats-ca.pem"
        - name: PORT
          value: "3000"
        ports:
        - name: http
          containerPort: 3000
